plugins {
    id "java"
    id "groovy"
    id "idea"
    id "eclipse"
    id "org.springframework.boot" version "${springBootVersion}" apply false
    id "org.eclipse.jkube.kubernetes" version "${jkubeVersion}" apply false
    id "com.diffplug.spotless" version "${spotlessVersion}"
}

allprojects {
    apply plugin: "java"
    apply plugin: "groovy"
    apply plugin: "idea"
    apply plugin: "eclipse"
    apply plugin: "com.diffplug.spotless"

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://repo.spring.io/release" }
    }

    spotless {
        java {
            googleJavaFormat()
            trimTrailingWhitespace()
            endWithNewline()
        }

        groovy {
            trimTrailingWhitespace()
            indentWithSpaces(4)
            endWithNewline()
        }

        groovyGradle {
            target "*.gradle", "**/*.gradle"
            trimTrailingWhitespace()
            indentWithSpaces(4)
            endWithNewline()
        }

        format "misc", {
            target "**/*.md", "**/*.yml"
            trimTrailingWhitespace()
            indentWithSpaces(2)
            endWithNewline()
        }

        lineEndings "UNIX"
    }

    sourceCompatibility = '17'
    [compileJava, compileTestJava, compileGroovy, compileTestGroovy]*.options*.encoding = "UTF-8"
    [compileJava, compileTestJava, compileGroovy, compileTestGroovy]*.options*.compilerArgs = ["--enable-preview", "-Xlint:all"]

    ext {
        springCloudVersion = "2022.0.4"
        springCloudAwsVersion = "2.3.4"
        awsJavaSDKVersion = "1.12.132"
        springdocVersion = "1.6.15"
    }

    dependencies {
        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"
        testCompileOnly "org.projectlombok:lombok"
        testAnnotationProcessor "org.projectlombok:lombok"

        testImplementation "org.assertj:assertj-core"
        testImplementation "org.mockito:mockito-core"
    }

    tasks.withType(JavaExec) {
        jvmArgs += "--enable-preview"
    }

    tasks.named("test") {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    task sourceJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set("sources")
        from sourceSets.main.allSource
    }

    compileJava.dependsOn "spotlessApply"
}
